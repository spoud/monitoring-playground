apiVersion: opentelemetry.io/v1alpha1
kind: OpenTelemetryCollector
metadata:
  name: kafka
  namespace: monitoring
spec:
  mode: deployment
  replicas: 1
  image: otel/opentelemetry-collector-contrib:0.98.0
  serviceAccount: kafka-otel-collector
  config: |
    extensions:
      health_check: {}

    receivers:
      prometheus/kafka:
        config:
          scrape_configs:
            - job_name: kafka
              scheme: http
              metrics_path: /
              scrape_interval: 20s
              kubernetes_sd_configs:
              - role: pod
              relabel_configs:
              - source_labels: [__meta_kubernetes_pod_label_strimzi_io_component_type]
                regex: "kafka"
                action: keep
              - action: keep
                source_labels: [__address__]
                regex: ".*:9404"
            - job_name: kafka-exporter
              scheme: http
              metrics_path: /metrics
              scrape_interval: 20s
              kubernetes_sd_configs:
              - role: pod
              relabel_configs:
              - source_labels: [__meta_kubernetes_pod_label_strimzi_io_component_type]
                regex: "kafka-exporter"
                action: keep
              - action: keep
                source_labels: [__address__]
                regex: ".*:9404"

    processors:
      batch:
        timeout: 200ms
      memory_limiter:
        check_interval: 5s
        limit_mib: 1500
        spike_limit_mib: 512

    exporters:
      debug:
        verbosity: detailed
      otlphttp/prometheus:
        endpoint: http://prometheus:9090/api/v1/otlp
        tls:
          insecure: true

    service:
      extensions:
      - health_check
      pipelines:
        metrics:
          receivers:
          - prometheus/kafka
          processors:
          - memory_limiter
          - batch
          exporters:
          - otlphttp/prometheus
